
public class LIS {
public static void main(String[] args) {
    int [] a = {2,1,4,3,5,6,8};
	int k = ceilIndex(a,8,0,a.length);
	System.out.println(longest(a));
}
    private static int ceilIndex(int [] a , int n,int lo, int hi) {
	if(lo>hi) {
	    return lo; 
	}
	int m = lo+(hi-lo)/2;
	if(a[m] == n) {
	    return m+1;
	}
	else if(a[m] < n) {
	    return ceilIndex(a, n, m+1, hi);
	}
	else {
	    return ceilIndex(a, n, lo, m-1);
	}
    }
    private static int longest(int[]a) {
	int [] table = new int[a.length];
	table[0] = a[0];
	int l = 1;
	for(int i=1;i<a.length;i++) {
	    if(a[i] < table[0]) {
		table[0] = a[i];
	    }
	    else if(a[i] > table[l-1]) {
		table[l++] = a[i];
	    }
	    else {
		int k = ceilIndex(table,a[i],0,l-1);
		table[k] = a[i];
	    }
	}
	for(int i:table) {
		System.out.println(i);
	}
	return l;
    }
}
