import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.PriorityQueue;
import java.util.Scanner;

import com.google.common.collect.ArrayListMultimap;
public class FoxNumbers {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try{
			//BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			Scanner s = new Scanner(System.in);
			int n = s.nextInt();			
			int [] re = new int[100];
			com.google.common.collect.Multimap<Integer,Integer> hm =  ArrayListMultimap.create();//com.google.common.collect.Multimap<Integer,Integer>;//<Integer, Integer>();
			PriorityQueue<Integer> pq = new PriorityQueue<Integer>(100,Collections.reverseOrder());
			for(int i = 0;i<n;i++) {
				re[i] = s.nextInt();//Integer.parseInt(inp[i]);
				pq.add(re[i]);
				hm.put(re[i], i);
			}
			while(true) {
				int l1 = pq.poll();
				int l2 = 0;
				Iterator<Integer> it = pq.iterator();
				it.next();
				while(it.hasNext()) {
					l2 = it.next();
					if(l1-l2 > 0) {
						break;
					}
				}
				System.out.println(l2);
				if(l1 - l2 > 0) {
					Collection<Integer> p1 = hm.get(l1);
					re[p1] = l1-l2;
					hm.remove(l1);
					hm.put(re[p1], p1);
					pq.add(re[p1]);
				}
				else {
					pq.add(l1);
					break;
				}
			}
			int op = 0;
			for(int i : re) {
				op+=i;
			}
			System.out.println(op+"   oppppp ");
		}	
		catch(Exception e) {
	
		}
	}

}
